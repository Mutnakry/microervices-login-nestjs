generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String   @id @default(uuid()) @db.Uuid
  email        String   @unique
  password     String
  refreshToken String?
  first_name   String
  last_name    String
  role         String   @default("USER")
  balance      Decimal  @default(0.0)
  created_at   DateTime @default(now())
  updated_at   DateTime @updatedAt

  // ✅ Password Reset (missing in your schema)
  resetToken       String?
  resetTokenExpiry DateTime?

  // ✅ OTP Login
  otpCode      String?
  otpExpiresAt DateTime?

  // ✅ Email Verification
  emailVerified        Boolean   @default(false)
  emailVerifyToken     String?
  emailVerifyExpiresAt DateTime?

  // ✅ MFA
  mfaSecret String?

  // ✅ Device Sessions
  sessions Session[]
}

model Session {
  id         String   @id @default(uuid()) @db.Uuid
  userId     String   @db.Uuid
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  ipAddress  String
  userAgent  String
  createdAt  DateTime @default(now())
  lastUsedAt DateTime @default(now())
  revoked    Boolean  @default(false)
}

model Tenant {
  id            String          @id @default(uuid()) @db.Uuid
  name          String
  payments      TenantPayment[]
  announcements Announcement[]
  seoConfigs    SeoTenantID[]
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
}

model TenantPayment {
  id        String   @id @default(uuid()) @db.Uuid
  tenantId  String   @db.Uuid
  amount    Decimal
  status    String // e.g. "PENDING", "COMPLETED", "FAILED"
  method    String // e.g. "CARD", "BANK", "PAYPAL"
  reference String? // payment gateway reference
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  tenant Tenant @relation(fields: [tenantId], references: [id])
}

model Announcement {
  id        String   @id @default(uuid()) @db.Uuid
  tenantId  String?  @db.Uuid
  title     String
  content   String
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  tenant Tenant? @relation(fields: [tenantId], references: [id])
}

model SeoTenantID {
  id          String   @id @default(uuid()) @db.Uuid
  tenantId    String   @db.Uuid
  page        String
  title       String
  description String
  keywords    String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  tenant Tenant @relation(fields: [tenantId], references: [id])
}

model Banner {
  id        String   @id @default(uuid()) @db.Uuid
  title     String
  imageUrl  String
  linkUrl   String?
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
